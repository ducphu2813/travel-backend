version: '3.8'

volumes:
  travel_mongo_data: {}
  postgres_data: {}
  maven_cache: {}

services:

  mongo:
    image: mongo:latest
    ports:
      - "27018:27017"  # sử dụng cổng khác vì có 1 mongodb khác của đồ án dotnet(27017:27017)
    volumes:
      - travel_mongo_data:/data/db
    #restart: always  # phần này là tự động restart mỗi khi khởi dộng Docker(ko cần lắm trong giai đoạn dev)
    networks:
      - travel_network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - travel_network

  #pgadmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - travel_network

  service-registry:
    image: service-registry:latest    # image của Service Registry (nếu đã build image)
    container_name: service-registry  # tên của container
    build:
      context: ./ServiceRegistry      # đường dẫn tới Dockerfile
      dockerfile: Dockerfile          # tên file Dockerfile (nếu có dùng tên khác thì đổi)
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "8761:8761"                   # cổng mặc định của Eureka Server
    environment:
      - EUREKA_SERVER_PORT=8761       # biến môi trường để định nghĩa cổng của Eureka Server
    networks:
      - travel_network

  traveluserservice:
    build:
      context: ./User
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6001:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    networks:
      - travel_network

  travelflightservice:
    build:
      context: ./Flight
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6002:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    networks:
      - travel_network

  travelbookingservice:
    build:
      context: ./Booking
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6003:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/booking
    networks:
      - travel_network

  travelpaymentservice:
    build:
      context: ./Payment
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6004:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    networks:
      - travel_network

  traveltourservice:
    build:
      context: ./Tour
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6005:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    networks:
      - travel_network

  travelresortservice:
    build:
      context: ./Resort
      dockerfile: Dockerfile
    volumes:
      - maven_cache:/root/.m2         # sử dụng maven_cache build cho nhanh
    ports:
      - "6006:8080"
    depends_on:
      - mongo
      - service-registry
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    networks:
      - travel_network

networks:
  travel_network:
    driver: bridge
